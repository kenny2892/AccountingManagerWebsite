@model TransactionTableViewModel

<thead>
    <input type="hidden" name="@(Model.ViewModelName + ".SortBy")" value="@Model.SortBy" />
    <input type="hidden" name="@(Model.ViewModelName + ".IsDescending")" value="@Model.IsDescending" />
    <input type="hidden" name="@(Model.ViewModelName + ".CurrentRowCount")" value="@Model.CurrentRowCount" />
    <tr>
        <th>
            <a href="#" onclick="ReloadTable('bank'); return false;">
                Bank
                @if(Model.SortBy == "bank")
                {
                    <span> @(Model.IsDescending ? "↓" : "↑")</span>
                }
            </a>
            <input type="text" name="@(Model.ViewModelName + ".BankSearch")" value="@Model.BankSearch" placeholder="Search" id="bank-search" class="transaction-search" onkeydown="Search(event)" />
        </th>
        <th>
            <a href="#" onclick="ReloadTable('purchasing_date'); return false;">
                Purchasing Date
                @if(Model.SortBy == "purchasing_date")
                {
                    <span> @(Model.IsDescending ? "↓" : "↑")</span>
                }
            </a>
            <input type="text" name="@(Model.ViewModelName + ".PurchasingDateSearch")" value="@Model.PurchasingDateSearch" placeholder="Search" id="purchasing-date-search" class="transaction-search" onkeydown="Search(event)" />
        </th>
        <th>
            <a href="#" onclick="ReloadTable('posting_date'); return false;">
                Posting Date
                @if(Model.SortBy == "posting_date")
                {
                    <span> @(Model.IsDescending ? "↓" : "↑")</span>
                }
            </a>
            <input type="text" name="@(Model.ViewModelName + ".PostingDateSearch")" value="@Model.PostingDateSearch" placeholder="Search" id="posting-date-search" class="transaction-search" onkeydown="Search(event)" />
        </th>
        <th>
            <a href="#" onclick="ReloadTable('amount'); return false;">
                Amount
                @if(Model.SortBy == "amount")
                {
                    <span> @(Model.IsDescending ? "↓" : "↑")</span>
                }
            </a>
            <input type="text" name="@(Model.ViewModelName + ".AmountSearch")" value="@Model.AmountSearch" placeholder="Search" id="amount-search" class="transaction-search" onkeydown="Search(event)" />
        </th>
        <th>
            <a href="#" onclick="ReloadTable('description'); return false;">
                Description
                @if(Model.SortBy == "description")
                {
                    <span> @(Model.IsDescending ? "↓" : "↑")</span>
                }
            </a>
            <input type="text" name="@(Model.ViewModelName + ".DescriptionSearch")" value="@Model.DescriptionSearch" placeholder="Search" id="description-search" class="transaction-search" onkeydown="Search(event)" />
        </th>
        <th>
            <a href="#" onclick="ReloadTable('category_one'); return false;">
                Category 1
                @if(Model.SortBy == "category_one")
                {
                    <span> @(Model.IsDescending ? "↓" : "↑")</span>
                }
            </a>
            <input type="text" name="@(Model.ViewModelName + ".CategoryOneSearch")" value="@Model.CategoryOneSearch" placeholder="Search" id="category-one-search" class="transaction-search" onkeydown="Search(event)" />
        </th>
        <th>
            <a href="#" onclick="ReloadTable('category_two'); return false;">
                Category 2
                @if(Model.SortBy == "category_two")
                {
                    <span> @(Model.IsDescending ? "↓" : "↑")</span>
                }
            </a>
            <input type="text" name="@(Model.ViewModelName + ".CategoryTwoSearch")" value="@Model.CategoryTwoSearch" placeholder="Search" id="category-two-search" class="transaction-search" onkeydown="Search(event)" />
        </th>
        <th>
            <a href="#" onclick="ReloadTable('type'); return false;">
                Type
                @if(Model.SortBy == "type")
                {
                    <span> @(Model.IsDescending ? "↓" : "↑")</span>
                }
            </a>
            <input type="text" name="@(Model.ViewModelName + ".TypeSearch")" value="@Model.TypeSearch" placeholder="Search" id="type-search" class="transaction-search" onkeydown="Search(event)" />
        </th>
        <th>
            <a href="#" onclick="ReloadTable('vendor_name'); return false;">
                Vendor
                @if(Model.SortBy == "vendor_name")
                {
                    <span> @(Model.IsDescending ? "↓" : "↑")</span>
                }
            </a>
            <input type="text" name="@(Model.ViewModelName + ".VendorNameSearch")" value="@Model.VendorNameSearch" placeholder="Search" id="vendor-name-search" class="transaction-search" onkeydown="Search(event)" />
        </th>
        <th>
            <a href="#" onclick="ReloadTable('is_purchase'); return false;">
                Is Purchase
                @if(Model.SortBy == "is_purchase")
                {
                    <span> @(Model.IsDescending ? "↓" : "↑")</span>
                }
            </a>
            <input type="text" name="@(Model.ViewModelName + ".IsPurchaseSearch")" value="@Model.IsPurchaseSearch" placeholder="Search" id="is-purchase-search" class="transaction-search" onkeydown="Search(event)" />
        </th>
        <th>
            <a href="#" onclick="ReloadTable('is_credit'); return false;">
                Is Credit
                @if(Model.SortBy == "is_credit")
                {
                    <span> @(Model.IsDescending ? "↓" : "↑")</span>
                }
            </a>
            <input type="text" name="@(Model.ViewModelName + ".IsCreditSearch")" value="@Model.IsCreditSearch" placeholder="Search" id="is-credit-search" class="transaction-search" onkeydown="Search(event)" />
        </th>
        <th>

        </th>
    </tr>
</thead>
<tbody>
    @foreach(var item in Model.Transactions)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Bank)
            </td>
            <td>
                @item.PurchasingDate.ToShortDateString()
            </td>
            <td>
                @item.PostingDate.ToShortDateString()
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AmountDisplay)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryOne)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryTwo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                <a asp-controller="Vendors" asp-action="Details" asp-route-id="@item.VendorName">@item.VendorName</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsPurchase)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsCredit)
            </td>
            <td>
                <a asp-action="Edit" asp-controller="Transactions" asp-route-id="@item.TransactionID" target="_blank">Edit</a> |
                <a asp-action="Details" asp-controller="Transactions" asp-route-id="@item.TransactionID" target="_blank">Details</a> |
                <a asp-action="Delete" asp-controller="Transactions" asp-route-id="@item.TransactionID" target="_blank">Delete</a>
            </td>
        </tr>
    }
</tbody>

@if(Model.InfiniteScroll)
{
    <script>
        SetUpInfiniteScroll();
    </script>
}